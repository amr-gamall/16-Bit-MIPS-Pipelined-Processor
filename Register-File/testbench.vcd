$date
	Wed Jun 26 23:43:21 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 32 ! dataB [31:0] $end
$var wire 32 " dataA [31:0] $end
$var reg 32 # addressA [31:0] $end
$var reg 32 $ addressB [31:0] $end
$var reg 32 % addressWrite [31:0] $end
$var reg 1 & clk $end
$var reg 32 ' dataWrite [31:0] $end
$var reg 1 ( rst $end
$var reg 1 ) writeEnable $end
$scope module dut $end
$var wire 32 * addressA [31:0] $end
$var wire 32 + addressB [31:0] $end
$var wire 32 , addressWrite [31:0] $end
$var wire 1 & clk $end
$var wire 32 - dataWrite [31:0] $end
$var wire 1 ( rst $end
$var wire 1 ) writeEnable $end
$var reg 32 . dataA [31:0] $end
$var reg 32 / dataB [31:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
1(
bx '
0&
bx %
bx $
bx #
bx "
bx !
$end
#10
b0 !
b0 /
b0 "
b0 .
b1011 $
b1011 +
b1010 #
b1010 *
0(
1&
#20
1)
b1001 %
b1001 ,
b1010101 '
b1010101 -
0&
#30
1&
#40
b1010 %
b1010 ,
b1111 '
b1111 -
0&
#50
b1111 "
b1111 .
1&
#60
0)
b1011 %
b1011 ,
b1100 '
b1100 -
0&
#70
1&
#80
b1111 !
b1111 /
b1010101 "
b1010101 .
b1010 $
b1010 +
b1001 #
b1001 *
0&
#90
1&
#100
b1010101 !
b1010101 /
b1111 "
b1111 .
b1001 $
b1001 +
b1010 #
b1010 *
0&
#110
1&
#120
b0 !
b0 /
b1011 $
b1011 +
0&
#130
1&
#140
0&
#150
1&
#160
0&
#170
1&
